/* CSS imported from https://codepen.io/lisilinhart/pen/OJRoRJe and adapted */
.start {
  display: block;
  position: relative;
  margin: 0.5em 0;
  padding: 15px;
  cursor: pointer;
  background: #fff;
  color: #000;
  border: none;
  border-radius: 0.4em;
  text-transform: uppercase;
  font-size: 20px;
  font-weight: 500;
  letter-spacing: 0.04em;
  mix-blend-mode: color-dodge;
  perspective: 500px;
  transform-style: preserve-3d;
}
.start:before, .start:after {
  --z: 0px;
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  content: '';
  width: 100%;
  height: 100%;
  opacity: 0;
  mix-blend-mode: inherit;
  border-radius: inherit;
  transform-style: preserve-3d;
  transform: translate3d(calc(var(--z) * 0px), calc(var(--z) * 0px), calc(var(--z) * 0px));
}
.start span {
  mix-blend-mode: none;
  display: block;
}
.start:after {
  background-color: #5d00ff;
}
.start:before {
  background-color: #ff1731;
}
.start:hover {
  background-color: #fff65b;
  transition: background 0.3s 0.1s;
}
.start:hover:before {
  --z: 0.04;
  animation: translateWobble 2.2s ease forwards;
}
.start:hover:after {
  --z: -0.06;
  animation: translateWobble 2.2s ease forwards;
}

@keyframes translateWobble {
  0% {
    opacity: 0;
    transform: translate3d(calc(var(--z) * 0px), calc(var(--z) * 0px), calc(var(--z) * 0px));
 }
  16% {
    transform: translate3d(calc(var(--z) * 160px), calc(var(--z) * 160px), calc(var(--z) * 160px));
 }
  28% {
    opacity: 1;
    transform: translate3d(calc(var(--z) * 70px), calc(var(--z) * 70px), calc(var(--z) * 70px));
 }
  44% {
    transform: translate3d(calc(var(--z) * 130px), calc(var(--z) * 130px), calc(var(--z) * 130px));
 }
  59% {
    transform: translate3d(calc(var(--z) * 85px), calc(var(--z) * 85px), calc(var(--z) * 85px));
 }
  73% {
    transform: translate3d(calc(var(--z) * 110px), calc(var(--z) * 110px), calc(var(--z) * 110px));
 }
  88% {
    opacity: 1;
    transform: translate3d(calc(var(--z) * 90px), calc(var(--z) * 90px), calc(var(--z) * 90px));
 }
  100% {
    opacity: 1;
    transform: translate3d(calc(var(--z) * 100px), calc(var(--z) * 100px), calc(var(--z) * 100px));
 }
}
